################################################################################
#
#    Copyright 2019 Adobe. All rights reserved.
#    This file is licensed to you under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License. You may obtain a copy
#    of the License at http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software distributed under
#    the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
#    OF ANY KIND, either express or implied. See the License for the specific language
#    governing permissions and limitations under the License.
#
################################################################################

version: 2.1

commands:
  build-archetype:
    description: "Build and verify archetype"
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            - v1-dependencies-

      - run:
          name: Build Archetype
          command: |
            java -version
            mvn -v
            mvn -B install

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/surefire-reports/.*" -exec cp {} ~/test-results/junit/ \;
          when: always

      - store_test_results:
          path: ~/test-results

      - store_artifacts:
          path: ~/test-results/junit

jobs:
  build-java-8:
    docker:
      - image: circleci/openjdk:8u212-jdk-stretch

    working_directory: ~/repo

    environment:
      MAVEN_OPTS: -Xmx3200m

    steps:
      - build-archetype

  build-java-11:
    docker:
      - image: circleci/openjdk:11-jdk-stretch

    working_directory: ~/repo

    environment:
      MAVEN_OPTS: -Xmx3200m

    steps:
      - build-archetype

  deploy-sample:
    docker:
      - image: circleci/openjdk:11-jdk-stretch-node

    working_directory: ~/repo

    environment:
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            - v1-dependencies-
      - run:
          name: Deploy Sample Project
          command: node .circleci/ci/deploy-sample.js

  deploy-ams:
    docker:
      - image: circleci/openjdk:11-jdk-stretch-node

    working_directory: ~/repo

    environment:
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            - v1-dependencies-
      - run:
          name: Deploy to AMS
          command: node .circleci/ci/deploy-ams.js

  release:
    docker:
      - image: circleci/openjdk:11-jdk-stretch
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            - v1-dependencies-
      - run:
          name: Release
          # Only performs a 'mvn deploy' after the 'mvn release:prepare' because circleCI
          # already checks out the git tag like 'mvn release:perform' would do.
          command: |
            echo $GPG_PRIVATE_KEY | base64 --decode | gpg --batch --import
            mvn -B -s .circleci/settings.xml clean deploy -Prelease-sign-artifacts
            rm -rf /home/circleci/.gnupg



workflows:
  version: 2
  build:
    jobs:
      - build-java-8:
          filters:
            tags:
              only: /.*/

      - build-java-11:
          filters:
            tags:
              only: /.*/

      - release:
          requires:
            - build-java-8
            - build-java-11
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^cif-project-archetype-\d+\.\d+\.\d+$/

      - deploy-sample:
          requires:
            - release
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^cif-project-archetype-\d+\.\d+\.\d+$/

      - deploy-ams:
          requires:
            - release
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^cif-project-archetype-\d+\.\d+\.\d+$/
