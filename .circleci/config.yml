################################################################################
#
#    Copyright 2019 Adobe. All rights reserved.
#    This file is licensed to you under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License. You may obtain a copy
#    of the License at http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software distributed under
#    the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
#    OF ANY KIND, either express or implied. See the License for the specific language
#    governing permissions and limitations under the License.
#
################################################################################

# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2

shared: &shared
  working_directory: ~/repo

  environment:
    # Customize the JVM maximum heap limit
    MAVEN_OPTS: -Xmx3200m

  steps:
    - checkout

    # Download and cache dependencies
    - restore_cache:
        keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

    - run: mvn dependency:go-offline

    - save_cache:
        paths:
          - ~/.m2
        key: v1-dependencies-{{ checksum "pom.xml" }}

    - run:
        name: Checkout and build CIF Core Components
        command: |
          git clone https://github.com/adobe/aem-core-cif-components.git
          cd aem-core-cif-components && mvn clean install && cd ..

    - run: 
        name: Build Archetype
        command: mvn integration-test

    - run:
        name: Save test results
        command: |
          mkdir -p ~/test-results/junit/
          find . -type f -regex ".*/surefire-reports/.*" -exec cp {} ~/test-results/junit/ \;
        when: always
    - store_test_results:
        path: ~/test-results
    - store_artifacts:
        path: ~/test-results/junit

jobs:
  build-java-8:
    docker:
      - image: circleci/openjdk:8-jdk
    <<: *shared

  build-java-11:
    docker:
      - image: circleci/openjdk:11-jdk
    <<: *shared

workflows:
  version: 2
  build:
    jobs:
      - build-java-8
      - build-java-11